
package Client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ButikS\u00f8gning", targetNamespace = "http://amazonconnection/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ButikSÃ¸gning {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sayHello", targetNamespace = "http://amazonconnection/", className = "Client.SayHello")
    @ResponseWrapper(localName = "sayHelloResponse", targetNamespace = "http://amazonconnection/", className = "Client.SayHelloResponse")
    @Action(input = "http://amazonconnection/ButikS\u00f8gning/sayHelloRequest", output = "http://amazonconnection/ButikS\u00f8gning/sayHelloResponse")
    public String sayHello();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAdresses", targetNamespace = "http://amazonconnection/", className = "Client.GetAdresses")
    @ResponseWrapper(localName = "getAdressesResponse", targetNamespace = "http://amazonconnection/", className = "Client.GetAdressesResponse")
    @Action(input = "http://amazonconnection/ButikS\u00f8gning/getAdressesRequest", output = "http://amazonconnection/ButikS\u00f8gning/getAdressesResponse")
    public List<String> getAdresses(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "ConvertAddress")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ConvertAddress", targetNamespace = "http://amazonconnection/", className = "Client.ConvertAddress")
    @ResponseWrapper(localName = "ConvertAddressResponse", targetNamespace = "http://amazonconnection/", className = "Client.ConvertAddressResponse")
    @Action(input = "http://amazonconnection/ButikS\u00f8gning/ConvertAddressRequest", output = "http://amazonconnection/ButikS\u00f8gning/ConvertAddressResponse")
    public List<String> convertAddress(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ConverAddress")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ConverAddress", targetNamespace = "http://amazonconnection/", className = "Client.ConverAddress")
    @ResponseWrapper(localName = "ConverAddressResponse", targetNamespace = "http://amazonconnection/", className = "Client.ConverAddressResponse")
    @Action(input = "http://amazonconnection/ButikS\u00f8gning/ConverAddressRequest", output = "http://amazonconnection/ButikS\u00f8gning/ConverAddressResponse")
    public String converAddress(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRoute", targetNamespace = "http://amazonconnection/", className = "Client.GetRoute")
    @ResponseWrapper(localName = "getRouteResponse", targetNamespace = "http://amazonconnection/", className = "Client.GetRouteResponse")
    @Action(input = "http://amazonconnection/ButikS\u00f8gning/getRouteRequest", output = "http://amazonconnection/ButikS\u00f8gning/getRouteResponse")
    public List<String> getRoute(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        boolean arg4);

    /**
     * 
     * @param arg0
     * @return
     *     returns Client.Time
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTravelTime", targetNamespace = "http://amazonconnection/", className = "Client.GetTravelTime")
    @ResponseWrapper(localName = "getTravelTimeResponse", targetNamespace = "http://amazonconnection/", className = "Client.GetTravelTimeResponse")
    @Action(input = "http://amazonconnection/ButikS\u00f8gning/getTravelTimeRequest", output = "http://amazonconnection/ButikS\u00f8gning/getTravelTimeResponse")
    public Time getTravelTime(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDistance", targetNamespace = "http://amazonconnection/", className = "Client.GetDistance")
    @ResponseWrapper(localName = "getDistanceResponse", targetNamespace = "http://amazonconnection/", className = "Client.GetDistanceResponse")
    @Action(input = "http://amazonconnection/ButikS\u00f8gning/getDistanceRequest", output = "http://amazonconnection/ButikS\u00f8gning/getDistanceResponse")
    public String getDistance();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPrice", targetNamespace = "http://amazonconnection/", className = "Client.GetPrice")
    @ResponseWrapper(localName = "getPriceResponse", targetNamespace = "http://amazonconnection/", className = "Client.GetPriceResponse")
    @Action(input = "http://amazonconnection/ButikS\u00f8gning/getPriceRequest", output = "http://amazonconnection/ButikS\u00f8gning/getPriceResponse")
    public String getPrice();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://amazonconnection/", className = "Client.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://amazonconnection/", className = "Client.LoginResponse")
    @Action(input = "http://amazonconnection/ButikS\u00f8gning/loginRequest", output = "http://amazonconnection/ButikS\u00f8gning/loginResponse")
    public boolean login(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTimeAndDate", targetNamespace = "http://amazonconnection/", className = "Client.GetTimeAndDate")
    @ResponseWrapper(localName = "getTimeAndDateResponse", targetNamespace = "http://amazonconnection/", className = "Client.GetTimeAndDateResponse")
    @Action(input = "http://amazonconnection/ButikS\u00f8gning/getTimeAndDateRequest", output = "http://amazonconnection/ButikS\u00f8gning/getTimeAndDateResponse")
    public String getTimeAndDate();

}
